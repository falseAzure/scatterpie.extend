% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform.R
\name{transform_labeller}
\alias{transform_labeller}
\title{Reverses the transformation of \code{\link{transform_values}}}
\usage{
transform_labeller(
  values,
  multiplier,
  area = FALSE,
  digits = 2,
  big.mark = ",",
  decimal.mark = ".",
  scale_cut = NULL,
  ...
)
}
\arguments{
\item{values}{A numeric vector representing the values/size of the spatial data points.}

\item{multiplier}{The multiplier with which the \code{values} was transformed using \code{\link{transform_values}(return_multiplier = TRUE)}.}

\item{area}{A logical value indicating whether the back transformation should be based on the area instead of the radius (default is FALSE).}

\item{digits}{Number of digits to round to.}

\item{big.mark}{A string to be used as the big mark in the labeller function (default is ".").}

\item{decimal.mark}{A string to be used as the decimal mark in the labeller function (default is ",").}

\item{scale_cut}{A numeric value to be used as the scale cut in the labeller function (default is NULL).}

\item{...}{Additional arguments to be passed to \code{\link[scales]{number}}.}
}
\description{
Reverses the transformation of \code{\link{transform_values}} so it can be used for the labeller in the \pkg{scatterpie} legend.
}
\details{
If the values were transformed using \code{\link{transform_values}} and is used in a \pkg{scatterpie} the labeller of the \pkg{scatterpie} legend has to be transformed as well.
This is done using \code{transform_labeller}, which should take the same arguments as \code{\link{transform_values}}.
It is used directly as a function call in the labeller argument of \code{\link[scatterpie]{geom_scatterpie_legend}}.
}
\examples{
\dontrun{
values <- c(100, 10, 200, 40)
sf_object <- sf::st_read('path_to_your_shapefile.shp')
ratio <- 0.08
area <- TRUE

transformed_values <- transform_values(
  values = values,
  sf_object = sf_object,
  ratio = 0.08,
  area = area,
  return_multiplier = TRUE
)

radius <- transformed_values$values
multiplier <- transformed_values$multiplier
geom_scatterpie_legend(
  radius = radius,
  labeller = function(x) {
    transform_labeller(
      values = x,
      multiplier = multiplier,
      area = area
    )
  }
)
}
}
